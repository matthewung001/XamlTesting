<Window x:Class="XamlReview.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:XamlReview"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525"
        WindowStyle="ThreeDBorderWindow">

    <Window.Resources>
        <SolidColorBrush x:Key="lblbgcolor" Color="Blue"/>
        <local:RoundingOffConverter x:Key="MyRoundingOffConverter"/>
        <local:BoolToStyleConverter x:Key="MyBoolToStyleConverter"/>
    </Window.Resources>

    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="100" />
            <RowDefinition Height="100" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        

        <Grid.Resources>
            <ControlTemplate x:Key="RoundButtonTemplate" TargetType="{x:Type Button}">
                <Grid>
                    <Ellipse Width="50" Height="50" Name="OuterCircle">
                        <Ellipse.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0, 0.5">
                                <GradientStop Offset="0" Color="OrangeRed"/>
                                <GradientStop Offset="1" Color="Orange"/>
                            </LinearGradientBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                    <Ellipse Width="40" Height="40"  Name="InnerCircle">
                        <Ellipse.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0, 1">
                                <GradientStop Offset="0" Color="White"/>
                                <GradientStop Offset="1" Color="Orange"/>
                            </LinearGradientBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                    
                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>


                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Setter TargetName="InnerCircle" Property="Fill" Value="LightGreen"/>
                    </Trigger>

                    <Trigger Property="Button.IsPressed" Value="True">
                        <Setter TargetName="InnerCircle" Property="Width" Value="20"/>
                        <Setter TargetName="InnerCircle" Property="Height" Value="20"/>
                        <Setter TargetName="OuterCircle" Property="Fill" Value="Gray"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            
            <!--Style?-->
            <Style TargetType="{x:Type Button}">
                <Setter Property="Width" Value="200" />
                <Setter Property="Height" Value="200" />
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="DarkGreen"/>
                <Setter Property="BorderBrush" Value="Black"/>

            </Style>
        </Grid.Resources>

        <!--<Button Grid.Row="1"  Grid.Column="2">Click ME</Button>-->

        <Button x:Name="startButton" Template="{StaticResource RoundButtonTemplate}" Grid.Row="0" Grid.Column="0" Content="Hello"/>

        <TextBox Grid.Row="0" Grid.Column="1" Name="textBox"  Height="30" local:TextBlockExtension.AllowOnlyString="True"/>

        <local:BirthdayYear x:Name="birthdayYear"></local:BirthdayYear>
        <TextBlock Text="{Binding BirthYear, ElementName=birthdayYear}" Grid.Column="1" Grid.Row="0" Height="20" VerticalAlignment="Top"></TextBlock>
        <Button Name="btn" Content="Change Value" FontSize="20" Click="Button_Click" Grid.Column="2" Grid.Row="0" Height="40" />
        <Label Grid.Row="2" Grid.Column="0" Background="{StaticResource lblbgcolor}" Height="49" Name="lbl"/>

        <!--
        <TabControl Grid.ColumnSpan="2" Grid.RowSpan="2">
            <TabItem Name="ColorTabItem" Header="Color Tab">
                <TabItem.ContextMenu>
                    <ContextMenu MenuItem.Click ="ContextMenuClickEventHandler">
                        <MenuItem Header="Red" Name="RedMenuItem"/>
                        <MenuItem Header="Blue" Name="BlueMenuItem"/>
                        <MenuItem Header="Orange" Name="OrangeMenuItem"/>
                    </ContextMenu>
                </TabItem.ContextMenu>
                <TabItem.Content>
                    Tab data here wooh!
                </TabItem.Content>
            </TabItem>
            <TabItem Name="ShapeTabItem" Header="Shape Tab"></TabItem>
        </TabControl>
-->
        
        <Grid Grid.Row="2" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBox Grid.Row="0" Grid.Column="1" Height="20" Name="txtBox"/>
            <TextBox Grid.Row="1" Grid.Column="1" Height="20" Text="{Binding ElementName=txtBox, Path=Text, Converter={StaticResource MyRoundingOffConverter}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
        </Grid>
        
        <Label Content="I will change the color based on the checkbox" Name="label" Grid.Row="1" Grid.Column="2" VerticalAlignment="Top" Style="{Binding IsValidData, Converter={StaticResource MyBoolToStyleConverter}}"/>
        <CheckBox x:Name="checkBox" Grid.Row="1" Grid.Column="2" Margin="0,50,0,0" Content="Check to change color" IsChecked="{Binding IsValidData}"/>
        
        
        <!-- UpdateSource Triggers example -->
        <DockPanel Grid.Row="2" Grid.Column="2" Name="dockPanel">
            <TextBlock Text="Source:" Width="Auto" Height="30"/>
            <TextBox Name="sourceText" Width="120" Height="30"/>
            <TextBlock Text="Target:" Width="Auto" Height="30"/>
            <TextBox Name="targetText" Text="{Binding ElementName=sourceText, Path=Text, UpdateSourceTrigger=PropertyChanged}" Width="120" Height="30"/>
        </DockPanel>

        <Popup Name="popup" HorizontalAlignment="Left" VerticalAlignment="Top" IsOpen="True" Grid.Column="0" Grid.Row="0">
            <StackPanel>
                <TextBlock Name="popupTextBlock" Background="LightBlue">
                Hello sir!
                </TextBlock>
                <Button Content="This is a button"/>
            </StackPanel>
        </Popup>

        <!-- AccessText to allow keybindings to a ui control-->
        <Button Name="btn1" Click="btn1_Click" Width="50" Height="30" HorizontalAlignment="Left" >
            <AccessText>_Click Me</AccessText>
        </Button>
    </Grid>
</Window>
